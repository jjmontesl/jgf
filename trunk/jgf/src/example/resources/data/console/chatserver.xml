<?xml version="1.0" encoding="ISO-8859-1" ?>

	<!--
	Java Game Framework Global Configuration File
	$Id$
 -->

<jgf>

	<!-- Application configuration -->
	<application>

		<!--
			Name of the application. Will appear in the Window Title and
			messages.
		-->
		<name>Java Game Framework: Console Test</name>

		<!-- Application version -->
		<version>1.0</version>

		<!-- Network protool -->
		<networkProtocolVersion>1.0</networkProtocolVersion>

		<!-- Debug mode -->
		<debug>true</debug>

		<!-- Engine reference -->
		<engine ref="engine" />
		
		<dedicatedServer>true</dedicatedServer>
		
	</application>

	<!-- 
		Engine Component
	 -->
	<service id="engine" class="net.jgf.jme.engine.JMEEngine">

		<!-- Enable jME collection of rendering statistics -->
		<collectStats>${application/debug}</collectStats>

		<!-- Service reference to the Logic Manager -->
		<logicManager ref="logic" />

	</service>

	<service id="messagebroker" class="net.jgf.messaging.MessageBroker">
	</service>

	<!-- 
		Logic Manager
	 -->
	<service id="logic" class="net.jgf.logic.DefaultLogicManager">

		<logic id="logic/root" class="net.jgf.logic.LogicStateNode">
		</logic>

	</service>

	<!-- 
		Network Manager
	 -->
	<service id="network" class="net.jgf.network.NetworkManager">
		<!--
			The server connector provides a channel to send messages out to
			clients, and to receive client messages. It represents the
			incoming/outgoing queue of messages through each 'channel'. It keeps
			a list of connected clients. If JGN is used, I guess this would be
			one integration point.
		-->
		<connector id="network/server" class="net.jgf.network.server.ServerConnector">
			<bindaddress type="reliable">127.0.0.1</bindaddress>
			<bindport type="reliable">20000</bindport>
			<bindaddress type="fast">127.0.0.1</bindaddress>
			<bindport type="fast">10000</bindport>
			<timeout>5000</timeout>
			<maxpackets>60</maxpackets>
			<messagebroker ref="messagebroker">
				<subscription topic="chat_received" />
			</messagebroker>
		</connector>
	</service>
	
</jgf>
 


