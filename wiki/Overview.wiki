#summary JGF Overview.

= JGF Overview =

===Straight into the matter===

JGF is a framework and as such it gives you a way of building your game. When you use a framework, you need to get used to its structure. JGF separates your game into *Entities*, *ViewStates* and *LogicStates*, and a few other components.

But let's see how a JGF application looks:

===JGF Configuration===

_The JGF configuration file_

JGF applications are initializated using a configuration file. This file reflects how our game is composed.

When we want to add functionality to the game, we add components to the configuration file. For example, if we want to add a screenshot functionality to our game, we would add the following ViewState:

{{{
<view id="view/root/level/screenshot" class="net.jgf.jme.view.ScreenshotView" 
    autoLoad="true" autoActivate="true" >
  <key>KEY_F12</key>
  <path>$APP_HOME/screenshots/screenshot-$ID.png</path>
</view>
}}}

The example shows the configuration of a ViewState (get used because ViewStates are a core part of JGF). In a real application, a ViewState is included somewhere within a ViewState tree. When the state is rendered it will check if a screenshot has been requested, and act accordingly.

In the practice, you copy and paste the configuration from the examples and modify the parameters to suit your needs.

_The game at a glance_

Defining the game structure in a configuration file allows us to see the big picture and think on how to implement or expand our game.

But, what services is a JGF game composed of? The main services (which you will probably cut and paste) are:

  * *Engine*: the engine runs the main game loop, updating the LogicState and ViewState trees.
  * *Logic*: this service just contains the !LogicState tree. Inside this service we build the !LogicState tree that will handle our game logic. 
  * *View*: this service contains the !ViewState tree. Here we specify the different views and input that we will use. For example, you'll have !ViewStates for the menus, the introduction screens, the main game, the hud...

Other services or components that you may be using are the !EntityManager, the !SettingsManager, the !MenuSystem...

Services and its parts are defined in the configuration file, and work together to form your game:

http://jgf.googlecode.com/svn/trunk/jgf/doc/screenshots/mudvolley-configtree.png

_Structure of the JGF configuration file (showing some different services and components)_

===Benefits of using a framework===

Often you'll need functionality (like menus or an introduction screen) ready to use quickly without worrying too much about the details. Usually you would code an initial version, but using a framework allows you to add those quickly and in a clean fashion. 

For example, if you need to add an introduction screen to your game, you just need to add a new View and make sure it runs sequentially before your other Views:

{{{
<view id="view/root/intro/logo" class="net.jgf.jme.view.display.DisplayItemsView" 
	autoLoad="true" autoActivate="true">
	
	<item id="view/root/intro/logo/tanks" class="net.jgf.jme.view.display.ImageItem">
		<center>0.0 0.2 0.0</center>
		<textureUrl>tanks/texture/logo/tanks-logo.png</textureUrl>
		<size>0.75</size>
	</item>
	
	<item id="view/root/intro/logo/title" class="net.jgf.jme.view.display.TextItem">
		<center>-0.00 -0.3 0.0</center>
		<size>0.25</size>
		<font>Verdana BOLD 40</font>
		<text>T a n k s</text>
	</item>	
	
</view>
}}}

If you later decide that you want to replace the whole introduction screen with a video or something completely different, you just need to replace that view with another framework or custom view.

===System overview===

If you are a geometrical person, you may prefer to look at the JGF System Overview diagram, which shows several significant components of the system: 

http://jgf.googlecode.com/svn/trunk/jgf/doc/design/diagrams/game-components.png


[http://code.google.com/p/jgf JGF Home] - [Features] - [Overview] - [GettingStarted Getting Started] - [http://code.google.com/p/jgf/source/browse/#svn/trunk/jgf Browse the Source]