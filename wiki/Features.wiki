#summary JGF (Java Game Engine) Features.
#labels Featured

= JGF Features =

We recommend spending some time getting familiar with JGF features. Learning what JGF provides may save you time.

*Logic and View states

  * Logic and View States drive application logic and aspect.
  * Entities, Scenes and other structures are easily handled by framework services.
  * Many elements can be described in the configuration file.

  http://jgf.googlecode.com/svn/trunk/jgf/doc/screenshots/sample-displayitems-1.png

  http://jgf.googlecode.com/svn/trunk/jgf/doc/screenshots/sample-displayitems-2.png

*Render Engine*

  * JGF currently uses JME 2 (jMonkeyEngine) as 3D engine.

*GUI System*

  * NiftyGUI is included out of the box.

*Settings System*

  * Settings management.
  * Settings storage providers.

  * Configuration Dialog for initial settings (_to be done_).
  * Command Line Options parsing (_to be done_).
 
*Console System*

  * Extensible and replaceable console system. Functionality, aspect and language can be customized.
  * Basic graphical interface.

  http://jgf.googlecode.com/svn/trunk/jgf/doc/screenshots/sample-console-1.png

*Extensibility*

JGF is designed to be extended. Base classes are provided for most of the components you'll need to implement to code your game. You can always provide new functionality writing your custom components if you need.

*Development*

JGF includes and provides components that easily allow you to add development tools to your game:

  * JME Scene Debugger (bounding volumes viewing, normals viewing, wireframe mode...).
  * Physics Debugger.
  * Scene Monitor / Scene Worker (for scene graph inspecting).
  * Unified logging.

  http://jgf.googlecode.com/svn/trunk/jgf/doc/screenshots/sample-debug-1.png

  http://jgf.googlecode.com/svn/trunk/jgf/doc/screenshots/sample-scenemonitor-1.png

*Loaders and Art Pipeline*

  * Modular loading system for Entities, Scenes and Models. 
  * Entity pools.
  * Standard way to convert and cache converted resources (_to be refactored_).

*Audio*

  * A simple, easy to use sound effects system is provided out of the box.

*Networking*

  * Any system can be integrated. _No out of the box networking yet_.

*Logging*

 * Using log4j (log4j).
 * Logging configuration.  
 * Informed startup, loading and shutdown procedures.

*Services and Configuration System*

JGF main configuration is done in a descriptive XML configuration file, which provides:

  * Easy overview of application parts and components.
  * Standard and practical way to configure components.
  * Easy way to add or replace parts of the application.
  * Convenient environment for developing and rapid prototyping.

*Build System*

  * Out of the box build scripts to package games, convert then to Windows .exe, create installers, Java Web Start... (_20% done_).


[http://code.google.com/p/jgf JGF Home] - [Features] - [Overview] - [GettingStarted Getting Started] - [http://code.google.com/p/jgf/source/browse/#svn/trunk/jgf Browse the Source] - [FAQ]