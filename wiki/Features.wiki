#summary JGF (Java Game Engine) Features.
#labels Featured

= JGF Features =

We recommend spending some time getting familiar with JGF features. Knowing them may save you time.

*Services and Configuration System*

JGF main configuration is done in a descriptive XML configuration file, which provides:

  * Easy overview of application parts and components.
  * Standard and practical way to configure components.
  * Easy way to add or replace parts of the application.
  * Convenient environment for testing.
  
*Console System*

  * Extensible and replaceable console system. Functionality, aspect and language can be customized.
  * A Beanshell console is provided.
  * Basic graphical interface.

  http://jgf.googlecode.com/svn/trunk/jgf/doc/screenshots/sample-console-1.png

*Settings System*

  * Settings management (defaults, typing...).
  * Settings storage.

  * Configuration Dialog for initial settings (_to be done_)_.
  * Command Line Options parsing service, which allows to set settings and other framework parameters based on the command line arguments passed to the application (_to be done_).

*Menu System*

  http://jgf.googlecode.com/svn/trunk/jgf/doc/screenshots/sample-menu-1.png

*Logic and Graphics states*

  * Logic and View States drive the application logic and aspect.
  * Services for Entities, Players, Scene and other game data management.

  http://jgf.googlecode.com/svn/trunk/jgf/doc/screenshots/sample-displayitems-1.png

  http://jgf.googlecode.com/svn/trunk/jgf/doc/screenshots/sample-displayitems-2.png

*Extensibility*

JGF is designed to be extensible. Base classes are provided for most of the components you'll need to implement to code your game. And you can always provide new functionality writing your custom components if you need.

  * JGF includes and provides components that easily allow you to add development tools to your game:
    * JME Scene Debugger (bounding volumes viewing, normals viewing, wireframe mode...).
    * Physics Debugger.
    * Scene Monitor / Scene Worker (for scene graph inspecting).
    * Framework components information.
    * Java VM metrics reports.

  http://jgf.googlecode.com/svn/trunk/jgf/doc/screenshots/sample-debug-1.png

  http://jgf.googlecode.com/svn/trunk/jgf/doc/screenshots/sample-scenemonitor-1.png

*Loaders and Art Pipeline*

  * Modular loading system for Entities, Scenes and Models. 
  * Entity pool system.
  * Standard way to convert and cache converted resources (_to be refactored_).

*Audio*

  * A simple, easy to use sound effects system is provided out of the box.

*Networking*

  _Work in progress_

*Logging*

 * Using log4j (log4j).
 * Logging configuration.
 * Timed logging about JVM metrics (memory, GC, etc...).  
 * Informed startup and shutdown procedures.

*Build System*

  * Ant scripts provided to package your application, convert it to exe, create installers, create javadocs... (_to be done_).


_Please note that some of the features listed are still to be built. A number of them have currently only basic support. If you are interested please collaborate with the project submitting your comments, usage feedback or patches._

[http://code.google.com/p/jgf JGF Home] - [Features] - [Overview] - [GettingStarted Getting Started] - [http://code.google.com/p/jgf/source/browse/#svn/trunk/jgf Browse the Source] - [FAQ]