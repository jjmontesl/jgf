<?xml version="1.0" encoding="ISO-8859-1" ?>

<!--
	Java Game Framework Global Configuration File
 --> 	

<jgf>

	<!-- Application configuration -->
	<application>
	
	    <key>taunklet</key>
		<name>Taunklet</name>
		<version>1.0</version>
		<networkProtocolVersion>1.0</networkProtocolVersion>
		<debug>true</debug>
		
		<description>
			Java Game Framework: Tanks Example Game
		</description>
		
		<engine ref="engine" />
		
	</application>

	<!-- 
		Logging configuration
	 -->
	<service id="logging" class="net.jgf.util.system.LoggingConfigService">
		<logger name="com.jme.scene.Node" level="WARN" />
		<logger name="com.jme.scene.Point" level="WARN" />
		<logger name="com.jme.scene.Line" level="WARN" />
		<logger name="net.jgf.loader.FileChainLoader" level="WARN" />				
	</service>

    <!-- 
        Settings configuration
     -->
    <service id="settings" class="net.jgf.settings.SettingsManager">
        
        <caseSensitive>true</caseSensitive>
    
        <settings>
        
            <setting id="settings/network/dedicatedServer" class="net.jgf.settings.BooleanSetting"  
                     label="Dedicated Server" default="false" />
            <setting id="settings/video/gamma" class="net.jgf.settings.FloatSetting"
                     label="Video Gamma" default="1.0f" />
            
            <setting id="settings/input/mouse/accel" class="net.jgf.settings.FloatSetting" 
                     label="Mouse Accel" default="0.0f" />
            <setting id="settings/input/mouse/sensitivity" class="net.jgf.settings.FloatSetting" 
                     label="Mouse Accel" default="0.0f" />                   

            <setting id="settings/input/key/up" class="net.jgf.jme.settings.KeySetting" 
                     label="Move Up" default="KEY_W" />
            <setting id="settings/input/key/down" class="net.jgf.jme.settings.KeySetting" 
                     label="Move Down" default="KEY_S" />
            <setting id="settings/input/key/left" class="net.jgf.jme.settings.KeySetting" 
                     label="Move Left" default="KEY_A" />
            <setting id="settings/input/key/right" class="net.jgf.jme.settings.KeySetting" 
                     label="Move Right" default="KEY_D" />
                     
            <setting id="settings/input/key/screenshot" class="net.jgf.jme.settings.KeySetting" 
                     label="Screenshot" default="KEY_F1" />                  
            <setting id="settings/input/key/console" class="net.jgf.jme.settings.KeySetting" 
                     label="Console" default="KEY_TAB" />
            
            <!-- <setting id="settings/game/level" class="net.jgf.settings.EnumSetting"
                     label="Difficulty Level" default="medium" enumClass="net.jgf.example.tanks.game.Difficulty" >
                     <value key="easy" label="Easy" />
                     <value key="medium" label="Medium" />
                     <value key="hard" label="Hard" />
            </setting>
             -->
            
            <setting id="settings/player/name" class="net.jgf.settings.StringSetting" 
                     label="Player Name" default="UnnamedTank" />
              
        </settings>
    
    </service>
    
    <service id="settingsStorage" class="net.jgf.settings.storage.PropertiesStorage">
        <path>$USER_HOME/taunklet.properties</path>
        <settings ref="settings" />
    </service>
	
	<!-- 
		Engine service
	 -->
	<service id="engine" class="net.jgf.jme.engine.JMEEngine">

		<timerCap>0.05</timerCap>
		<collectStats>${application/debug}</collectStats>
		
		<logicManager ref="logic" />
		<viewManager ref="view" />
		
	</service>
	
	<service id="console" class="net.jgf.console.StreamConsoleWrapper">
		<service id="console/wrapped" class="net.jgf.console.bean.BeanshellConsole" >
	
			<bean name="settings" class="net.jgf.console.bean.SettingsBean" >
				<settings ref="settings" />
			</bean>
			<bean name="jgf" class="net.jgf.console.bean.JgfToolsConsoleBean" >
			</bean>
			
		</service>
	</service>
	
	<!-- 
	<service id="commandLine" class="net.jgf.cli.DefaultCliProcessor">
		<allowConsoleExpressions>true</allowConsoleExpressions>
	</service>

	<service id="minimalSettings" class="net.jgf.k.dialog.StandardGameDialog">
		<image>texture/logo/indoorbattles-dialog.png</image>
		<displayCondition>onFailureOrHardwareChange</displayCondition>
	</service>
	 -->
	
	<!-- 
		Entity Manager: Just create groups. Entities are 
		usually added dynamically or by loaders.
	 -->
	<service id="entity" class="net.jgf.entity.DefaultEntityManager">
		
		<entity id="entity/root" class="net.jgf.entity.EntityGroup" >

			<entity id="entity/root/players" class="net.jgf.entity.EntityGroup">
			</entity>
			
			<entity id="entity/root/enemy" class="net.jgf.entity.EntityGroup">
			</entity>
			
			<entity id="entity/root/bullets" class="net.jgf.entity.EntityGroup">
			</entity>
			
			<entity id="entity/root/mine" class="net.jgf.entity.EntityGroup">
			</entity>
			
		</entity>
			
	</service> 
		
	
	<!--
		Scene Manager: Default Scene Manager. Don't define the scene as it will be loaded
		during runtime.
	 -->
	<service id="scene/manager" class="net.jgf.scene.SimpleSceneManager">
	</service>
	
	<!--
		Model Loading: Model loader system configuration.
	 -->
	<service id="loader" class="net.jgf.loader.DefaultLoaderManager">
		
		<!-- This chain provides model loading and caching and also rotates the
		loaded nodes to correct the orientation used in blender to design models for this game -->
		<loader id="loader/model" class="net.jgf.loader.ChainLoader" >
			
			<loader id="loader/model/converter" class="net.jgf.jme.loader.model.ConverterLoader" />
		
			<loader id="loader/model/transformer" class="net.jgf.jme.loader.model.SpatialTransformerLoader" >
				<property name="SpatialTransformerLoader.rotatePi" value="-0.5 0.0 0.0" />
			</loader>
			
		</loader>
		
		<!-- The scene loader is a FileChain loader: loads a chain of loaders from a file (which
		defines the level). See the level configuration to see the each level's loading chain -->
		<loader id="loader/scene" class="net.jgf.loader.FileChainLoader">
			<property name="TanksSceneLoader.sceneManager" value="scene/manager" />
		</loader>
		
		<loader id="loader/scene/referencesprocessor" class="net.jgf.example.tanks.loader.SceneReferencesProcessorLoader">
			<reference regexp="a.*" type="entity" target="entity/root/enemies">
				<loader id="!loader/scene/referencesprocessor/enemy-a" class="net.jgf.loader.ReferenceLoader" >
					<property name="ReferenceLoader.loader" value="loader/entity" />
					<property name="FileChainLoader.resourceUrl" value="tanks/entity/tank-a.xml" />
				</loader>
			</reference>
			<reference regexp="b.*" type="entity" target="entity/root/enemies">
				<loader id="!loader/scene/referencesprocessor/enemy-b" class="net.jgf.loader.ReferenceLoader" >
					<property name="ReferenceLoader.loader" value="loader/entity" />
					<property name="FileChainLoader.resourceUrl" value="tanks/entity/tank-b.xml" />
				</loader>
			</reference>			
		</loader>
		
		<!--  The EntityLoader used is a FileChainLoader: reads a chain of loaders from a file -->
		<loader id="loader/entity" class="net.jgf.loader.FileChainLoader">
			<property name="EntityModelLoader.loader" value="loader/model" />
		</loader>
		
		<!-- This entity loader is an alternative entity loader that pools entities: it wraps
		 the non-pooled entity loader for this game -->
		<loader id="loader/entity/pool" class="net.jgf.loader.entity.pool.EntityPoolLoader">
			
			<loader ref="loader/entity" />
			
			<pool id="loader/entity/pool/bullet" class="net.jgf.loader.entity.pool.EntityPool">
				<key>FileChainLoader.resourceUrl</key>
				<value>tanks/entity/bullet.xml</value>
				<maxInstances>200</maxInstances>
 			</pool>
			
		</loader>		
				
	</service>
	
	<!-- 
		Logic Manager: contains the logic state tree.
	 -->
	<service id="logic" class="net.jgf.logic.DefaultLogicManager">
	
		<logic id="logic/root" class="net.jgf.logic.LogicStateNode">
			
			<logic id="logic/action" class="net.jgf.logic.LogicStateNode" 
				autoActivate="false">
				
				<logic id="logic/action/newgame" class="net.jgf.logic.action.control.ControllerAction" >
					<step type="deactivateAndUnload" ref="view/root/main" />
					<step type="runAction" ref="logic/action/newgame/init" />
					<step type="runAction" ref="logic/action/restart" />
				</logic>
				
				<logic id="logic/action/newgame/init" class="net.jgf.example.tanks.logic.NewGameAction" >
				</logic>
				
				<logic id="logic/action/restart" class="net.jgf.example.tanks.logic.RestartAction" >
				</logic>				
				
				<logic id="logic/action/menuscene" class="net.jgf.example.tanks.logic.MenuSceneAction" />
				
				<logic id="logic/action/showsettings" class="net.jgf.logic.action.control.ControllerAction" >
				   <step type="deactivate" ref="view/root/main/menu" />
				   <step type="loadAndActivate" ref="view/root/main/settings" />
				</logic>
				
				<logic id="logic/action/showmenu" class="net.jgf.logic.action.control.ControllerAction" >
                   <step type="deactivate" ref="view/root/main/settings" />
                   <step type="loadAndActivate" ref="view/root/main/menu" />
                </logic>
				
				<logic id="logic/action/loadmenu" class="net.jgf.logic.action.control.ControllerAction" >
					<step type="deactivateAndUnload" ref="logic/root/ingame" />
					<step type="deactivateAndUnload" ref="view/root/level" />
					<step type="runAction" ref="logic/action/menuscene" />
                    <step type="runAction" ref="logic/action/showmenu" />
				</logic>
				
				<logic id="logic/action/quit" class="net.jgf.logic.action.QuitAction" />
				
			</logic>
			
			<logic id="logic/root/ingame" class="net.jgf.logic.LogicStateNode" >
				
				<logic id="logic/root/ingame/spawn" class="net.jgf.example.tanks.logic.SpawnLogic"
					autoLoad="true" autoActivate="true" >
				</logic>
			
				<logic id="logic/root/ingame/ingame" class="net.jgf.example.tanks.logic.InGameLogic"
					autoLoad="true" autoActivate="true" > 
				</logic>
				
				<logic id="logic/root/ingame/mission" class="net.jgf.example.tanks.logic.MissionLogic"
					autoLoad="true" autoActivate="true" >
				</logic>				
			
			</logic>
			
		</logic>
		
	</service>
	
	<!-- 
		View Manager: contains the view state tree.
	 -->
	<service id="view" class="net.jgf.view.DefaultViewManager" depends="engine">

		<view id="view/root" class="net.jgf.view.ViewStateNode">

			<view id="view/root/intro" class="net.jgf.view.ViewSequencerNode" 
				autoLoad="true" autoActivate="true" >
				
				<unloadOnFinish>true</unloadOnFinish>

				<view id="view/root/intro/tech" class="net.jgf.jme.view.gui.NiftyGuiView"
				   autoLoad="true" autoActivate="true">
				   <file>tanks/gui/introtech.xml</file>
				   <endAfter>3.0</endAfter>
				</view>
				
                <view id="view/root/intro/title" class="net.jgf.jme.view.gui.NiftyGuiView"
                   autoLoad="true" autoActivate="false">
                   <file>tanks/gui/title.xml</file>
                   <endAfter>3.0</endAfter>
                </view>		
				
				<view id="view/root/intro/startlogic" class="net.jgf.view.ActionView" 
					autoLoad="true" autoActivate="false" >
					<action ref="logic/action/loadmenu" />
				</view>

			</view>

			<view id="view/root/main" class="net.jgf.view.ViewStateNode"
				autoLoad="false" autoActivate="false" >
				
				<view id="view/root/main/scene" class="net.jgf.example.tanks.view.ProjectedWaterView"
					autoLoad="true" autoActivate="true" >
					<sceneManager ref="scene/manager" />		
				</view>
				
				<view id="view/root/main/scene/skybox" class="net.jgf.jme.view.SkyboxRenderView"
					autoLoad="true" autoActivate="true" >
					<sceneManager ref="scene/manager" />		
				</view>
				
                <view id="view/root/main/menu" class="net.jgf.jme.view.gui.NiftyGuiView"
                   autoLoad="true" autoActivate="true">
                   <file>tanks/gui/mainmenu.xml</file>
                </view>
                
                <view id="view/root/main/settings" class="net.jgf.jme.view.gui.SettingsConfigView"
                   autoLoad="false" autoActivate="false">
                   <file>tanks/gui/settings.xml</file>
                   <page>
                        <item setting="settings/input/key/up" />
                        <item setting="settings/input/key/down" />
                        <item setting="settings/input/key/left" />
                        <item setting="settings/input/key/right" />
                   </page>
                </view>  

			</view>


			<view id="view/root/level" class="net.jgf.view.ViewStateNode">
			
				<view id="view/root/level/fight" class="net.jgf.view.ViewStateNode"
					autoLoad="true" autoActivate="true" >
					
					
					<!-- 
					<view id="view/root/level/fight/spectator" class="net.jgf.jme.view.FreeCameraView"
						autoLoad="true" autoActivate="true" >
						<sceneManager ref="scene/manager" />
					</view>
					-->
					 
					<!--  
					<view id="view/root/level/fight/scene" class="net.jgf.jme.view.SceneRenderView"
						autoLoad="true" autoActivate="true" >
						<sceneManager ref="scene/manager" />		
					</view>
					 -->
					
					<view id="view/root/level/fight/effects" class="net.jgf.example.tanks.view.EffectsView"
						autoLoad="true" autoActivate="true" >
					</view>					
					
					<view id="view/root/level/fight/input" class="net.jgf.example.tanks.view.InputView"
						autoLoad="true" autoActivate="true" >
					</view>
					
					<view id="view/root/level/match/skybox" class="net.jgf.jme.view.SkyboxRenderView"
						autoLoad="true" autoActivate="true" >
						<sceneManager ref="scene/manager" />		
					</view>

					<view id="view/root/level/fight/water" class="net.jgf.example.tanks.view.ProjectedWaterView"
						autoLoad="true" autoActivate="true" >
						<sceneManager ref="scene/manager" />		
					</view>
					
					<view id="view/root/level/fight/viewupdate" class="net.jgf.example.tanks.view.TanksView"
						autoLoad="true" autoActivate="true" >
					</view>
					
				</view>

				<view id="view/root/level/failed" class="net.jgf.view.ViewStateNode"
						autoLoad="false" autoActivate="false">

	                <view id="view/root/level/failed/banner" class="net.jgf.jme.view.gui.NiftyGuiView"
	                   autoLoad="true" autoActivate="true">
	                   <file>tanks/gui/failed.xml</file>
	                </view> 

				</view>

                <view id="view/root/level/osd" class="net.jgf.jme.view.gui.NiftyGuiView"
                   autoLoad="true" autoActivate="true">
                   <file>tanks/gui/osd.xml</file>
                </view> 

				
				<view id="view/root/level/grid" class="net.jgf.jme.view.devel.AxisGridView" 
					autoLoad="false" autoActivate="false" >
					<sceneManager ref="scene/manager" />
					<drawBehind>false</drawBehind>
					<center>0.0 0.01 0.0</center>
					<spacing>1</spacing>
				</view>
				 
				<view id="view/root/level/debug" class="net.jgf.jme.view.devel.DebugView" 
					autoLoad="true" autoActivate="true" >
					<sceneManager ref="scene/manager" />
				</view>
				
				<view id="view/root/level/ui/stats/switch" class="net.jgf.jme.view.ToggleInputView" context="debug"
					autoLoad="true" autoActivate="true" >

					<key>KEY_F11</key>
				
					<view id="view/root/level/ui/stats" class="net.jgf.jme.view.devel.StatsView"
						autoLoad="true" autoActivate="false" >
						<graphWidth>1.0</graphWidth>
						<graphHeight>0.20</graphHeight>
						<graphAlpha>0.8</graphAlpha>
					</view>
				
				</view>
			
				<view id="view/root/level/ui/scenemonitor/switch" class="net.jgf.jme.view.ToggleInputView" context="debug"
					autoLoad="true" autoActivate="true" >

					<key>KEY_F12</key>
			
					<!-- <view id="view/root/level/ui/scenemonitor" class="net.jgf.jme.view.devel.SceneMonitorView"
						autoLoad="true" autoActivate="false" context="debug">
						<sceneManager ref="scene/manager" />
						<updateInterval>5</updateInterval>
					</view>  -->
					
					<view id="view/root/level/ui/sceneworker" class="net.jgf.jme.view.devel.SceneWorkerView"
						autoLoad="true" autoActivate="false" context="debug">
						<sceneManager ref="scene/manager" />
						<register ref="view/root" />
						<register ref="view/root/level/grid" />
						<register ref="logic/root" />
					</view>
				
				</view>
		
				
				<view id="view/root/level/cursor" class="net.jgf.jme.view.CursorRenderView"
					autoLoad="true" autoActivate="true" >
					<textureUrl>tanks/texture/cursor.png</textureUrl>
				</view>
				
			</view>				
			
			<!-- Console View state that serves as interface to use the Console system -->
			<view id="view/root/console/switch" class="net.jgf.jme.view.ToggleInputView"
				autoLoad="true" autoActivate="true">

				<key>KEY_TAB</key>

				<view id="view/root/console" class="net.jgf.jme.view.ConsoleView"
					autoLoad="true" autoActivate="false">
					<console ref="console" />
				</view>
				
			</view>
			
		</view>
			
	</service>
	
	<!-- 
		Sound Jukebox Service
	 -->
	<service id="audio" class="net.jgf.jme.audio.SimpleSoundService">
		
		<audio id="audio/shot" class="net.jgf.jme.audio.AudioItem">
			<resourceUrl>tanks/audio/mgun.ogg</resourceUrl>
		</audio>
		
	</service>

	<!-- 
		System Information Service
	 -->
	<service id="systemInfo" class="net.jgf.util.system.SystemInfoService" context="debug">
		<reportInterval>20000</reportInterval>
	</service>
	
</jgf>
 


